/* Automatically generated file, do not edit */
static const struct edited_bindings_t edited_func_help[] = {
    { L"vi-paste-next",              EDITED_VI_PASTE_NEXT,                
      L"Vi paste previous deletion to the right of the cursor" },
    { L"vi-paste-prev",              PASTE_PREV,                
      L"Vi paste previous deletion to the left of the cursor" },
    { L"vi-prev-big-word",           PREV_BIG_WORD,             
      L"Vi move to the previous space delimited word" },
    { L"vi-prev-word",               EDITED_VI_PREV_WORD,                 
      L"Vi move to the previous word" },
    { L"vi-next-big-word",           EDITED_VI_NEXT_BIG_WORD,             
      L"Vi move to the next space delimited word" },
    { L"vi-next-word",               EDITED_VI_NEXT_WORD,                 
      L"Vi move to the next word" },
    { L"vi-change-case",             EDITED_VI_CHANGE_CASE,               
      L"Vi change case of character under the cursor and advance one character" },
    { L"vi-change-meta",             EDITED_VI_CHANGE_META,               
      L"Vi change prefix command" },
    { L"vi-insert-at-bol",           INSERT_AT_BOL,             
      L"Vi enter insert mode at the beginning of line" },
    { L"vi-replace-char",            EDITED_VI_REPLACE_CHAR,              
      L"Vi replace character under the cursor with the next character typed" },
    { L"vi-replace-mode",            EDITED_VI_REPLACE_MODE,              
      L"Vi enter replace mode" },
    { L"vi-substitute-char",         EDITED_VI_SUBSTITUTE_CHAR,           
      L"Vi replace character under the cursor and enter insert mode" },
    { L"vi-substitute-line",         EDITED_VI_SUBSTITUTE_LINE,           
      L"Vi substitute entire line" },
    { L"vi-change-to-eol",           CHANGE_TO_EOL,             
      L"Vi change to end of line" },
    { L"vi-insert",                  INSERT,                    
      L"Vi enter insert mode" },
    { L"vi-add",                     EDITED_VI_ADD,                       
      L"Vi enter insert mode after the cursor" },
    { L"vi-add-at-eol",              EDITED_VI_ADD_AT_EOL,                
      L"Vi enter insert mode at end of line" },
    { L"vi-delete-meta",             EDITED_VI_DELETE_META,               
      L"Vi delete prefix command" },
    { L"vi-end-big-word",            END_BIG_WORD,              
      L"Vi move to the end of the current space delimited word" },
    { L"vi-end-word",                EDITED_VI_END_WORD,                  
      L"Vi move to the end of the current word" },
    { L"vi-undo",                    EDITED_VI_UNDO,                      
      L"Vi undo last change" },
    { L"vi-command-mode",            COMMAND_MODE,              
      L"Vi enter command mode (use alternative key bindings)" },
    { L"vi-zero",                    ZERO,                      
      L"Vi move to the beginning of line" },
    { L"vi-delete-prev-char",        DELETE_PREV_CHAR,          
      L"Vi move to previous character (backspace)" },
    { L"vi-list-or-eof",             EDITED_VI_LIST_OR_EOF,               
      L"Vi list choices for completion or indicate end of file if empty line" },
    { L"vi-kill-line-prev",          KILL_LINE_PREV,            
      L"Vi cut from beginning of line to cursor" },
    { L"vi-search-prev",             SEARCH_PREV,               
      L"Vi search history previous" },
    { L"vi-search-next",             SEARCH_NEXT,               
      L"Vi search history next" },
    { L"vi-repeat-search-next",      EDITED_VI_REPEAT_SEARCH_NEXT,        
      L"Vi repeat current search in the same search direction" },
    { L"vi-repeat-search-prev",      REPEAT_SEARCH_PREV,        
      L"Vi repeat current search in the opposite search direction" },
    { L"vi-next-char",               EDITED_VI_NEXT_CHAR,                 
      L"Vi move to the character specified next" },
    { L"vi-prev-char",               PREV_CHAR,                 
      L"Vi move to the character specified previous" },
    { L"vi-to-next-char",            EDITED_VI_TO_NEXT_CHAR,              
      L"Vi move up to the character specified next" },
    { L"vi-to-prev-char",            EDITED_VI_TO_PREV_CHAR,              
      L"Vi move up to the character specified previous" },
    { L"vi-repeat-next-char",        REPEAT_NEXT_CHAR,          
      L"Vi repeat current character search in the same search direction" },
    { L"vi-repeat-prev-char",        REPEAT_PREV_CHAR,          
      L"Vi repeat current character search in the opposite search direction" },
    { L"vi-match",                   MATCH,                     
      L"Vi go to matching () {} or []" },
    { L"vi-undo-line",               EDITED_VI_UNDO_LINE,                 
      L"Vi undo all changes to line" },
    { L"vi-to-column",               EDITED_VI_TO_COLUMN,                 
      L"Vi go to specified column" },
    { L"vi-yank-end",                EDITED_VI_YANK_END,                  
      L"Vi yank to end of line" },
    { L"vi-yank",                    YANK,                      
      L"Vi yank" },
    { L"vi-comment-out",             COMMENT_OUT,               
      L"Vi comment out current command" },
    { L"vi-alias",                   ALIAS,                     
      L"Vi include shell alias" },
    { L"vi-to-history-line",         TO_HISTORY_LINE,           
      L"Vi go to specified history file line." },
    { L"vi-histedit",                EDITED_VI_HISTEDIT,                  
      L"Vi edit history line with vi" },
    { L"vi-history-word",            EDITED_VI_HISTORY_WORD,              
      L"Vi append word from previous input line" },
    { L"vi-redo",                    REDO,                      
      L"Vi redo last non-motion command" },
    { L"em-delete-or-list",          EDITED_EM_DELETE_OR_LIST,            
      L"Delete character under cursor or list completions if at end of line" },
    { L"em-delete-next-word",        EDITED_EM_DELETE_NEXT_WORD,          
      L"Cut from cursor to end of current word" },
    { L"em-yank",                    EDITED_EM_YANK,                      
      L"Paste cut buffer at cursor position" },
    { L"em-kill-line",               EDITED_EM_KILL_LINE,                 
      L"Cut the entire line and save in cut buffer" },
    { L"em-kill-region",             EDITED_EM_KILL_REGION,               
      L"Cut area between mark and cursor and save in cut buffer" },
    { L"em-copy-region",             EDITED_EM_COPY_REGION,               
      L"Copy area between mark and cursor to cut buffer" },
    { L"em-gosmacs-transpose",       EDITED_EM_GOSMACS_TRANSPOSE,         
      L"Exchange the two characters before the cursor" },
    { L"em-next-word",               EDITED_EM_NEXT_WORD,                 
      L"Move next to end of current word" },
    { L"em-upper-case",              EDITED_EM_UPPER_CASE,                
      L"Uppercase the characters from cursor to end of current word" },
    { L"em-capitol-case",            EDITED_EM_CAPITOL_CASE,              
      L"Capitalize the characters from cursor to end of current word" },
    { L"em-lower-case",              EDITED_EM_LOWER_CASE,                
      L"Lowercase the characters from cursor to end of current word" },
    { L"em-set-mark",                EDITED_EM_SET_MARK,                  
      L"Set the mark at cursor" },
    { L"em-exchange-mark",           EDITED_EM_EXCHANGE_MARK,             
      L"Exchange the cursor and mark" },
    { L"em-universal-argument",      EDITED_EM_UNIVERSAL_ARGUMENT,        
      L"Universal argument (argument times 4)" },
    { L"em-meta-next",               EDITED_EM_META_NEXT,                 
      L"Add 8th bit to next character typed" },
    { L"em-toggle-overwrite",        EDITED_EM_TOGGLE_OVERWRITE,          
      L"Switch from insert to overwrite mode or vice versa" },
    { L"em-copy-prev-word",          EDITED_EM_COPY_PREV_WORD,            
      L"Copy current word to cursor" },
    { L"em-inc-search-next",         EDITED_EM_INC_SEARCH_NEXT,           
      L"Emacs incremental next search" },
    { L"em-inc-search-prev",         EDITED_EM_INC_SEARCH_PREV,           
      L"Emacs incremental reverse search" },
    { L"em-delete-prev-char",        EDITED_EM_DELETE_PREV_CHAR,          
      L"Delete the character to the left of the cursor" },
    { L"ed-end-of-file",             EDITED_ED_END_OF_FILE,               
      L"Indicate end of file" },
    { L"ed-insert",                  EDITED_ED_INSERT,                    
      L"Add character to the line" },
    { L"ed-delete-prev-word",        EDITED_ED_DELETE_PREV_WORD,          
      L"Delete from beginning of current word to cursor" },
    { L"ed-delete-next-char",        EDITED_ED_DELETE_NEXT_CHAR,          
      L"Delete character under cursor" },
    { L"ed-kill-line",               EDITED_ED_KILL_LINE,                 
      L"Cut to the end of line" },
    { L"ed-move-to-end",             EDITED_ED_MOVE_TO_END,               
      L"Move cursor to the end of line" },
    { L"ed-move-to-beg",             EDITED_ED_MOVE_TO_BEG,               
      L"Move cursor to the beginning of line" },
    { L"ed-transpose-chars",         EDITED_ED_TRANSPOSE_CHARS,           
      L"Exchange the character to the left of the cursor with the one under it" },
    { L"ed-next-char",               EDITED_ED_NEXT_CHAR,                 
      L"Move to the right one character" },
    { L"ed-prev-word",               EDITED_ED_PREV_WORD,                 
      L"Move to the beginning of the current word" },
    { L"ed-prev-char",               EDITED_ED_PREV_CHAR,                 
      L"Move to the left one character" },
    { L"ed-quoted-insert",           EDITED_ED_QUOTED_INSERT,             
      L"Add the next character typed verbatim" },
    { L"ed-digit",                   EDITED_ED_DIGIT,                     
      L"Adds to argument or enters a digit" },
    { L"ed-argument-digit",          EDITED_ED_ARGUMENT_DIGIT,            
      L"Digit that starts argument" },
    { L"ed-unassigned",              EDITED_ED_UNASSIGNED,                
      L"Indicates unbound character" },
    { L"ed-ignore",                  EDITED_ED_IGNORE,                    
      L"Input characters that have no effect" },
    { L"ed-newline",                 EDITED_ED_NEWLINE,                   
      L"Execute command" },
    { L"ed-delete-prev-char",        EDITED_ED_DELETE_PREV_CHAR,          
      L"Delete the character to the left of the cursor" },
    { L"ed-clear-screen",            EDITED_ED_CLEAR_SCREEN,              
      L"Clear screen leaving current line at the top" },
    { L"ed-redisplay",               EDITED_ED_REDISPLAY,                 
      L"Redisplay everything" },
    { L"ed-start-over",              EDITED_ED_START_OVER,                
      L"Erase current line and start from scratch" },
    { L"ed-sequence-lead-in",        EDITED_ED_SEQUENCE_LEAD_IN,          
      L"First character in a bound sequence" },
    { L"ed-prev-history",            EDITED_ED_PREV_HISTORY,              
      L"Move to the previous history line" },
    { L"ed-next-history",            EDITED_ED_NEXT_HISTORY,              
      L"Move to the next history line" },
    { L"ed-search-prev-history",     EDITED_ED_SEARCH_PREV_HISTORY,       
      L"Search previous in history for a line matching the current" },
    { L"ed-search-next-history",     EDITED_ED_SEARCH_NEXT_HISTORY,       
      L"Search next in history for a line matching the current" },
    { L"ed-prev-line",               EDITED_ED_PREV_LINE,                 
      L"Move up one line" },
    { L"ed-next-line",               EDITED_ED_NEXT_LINE,                 
      L"Move down one line" },
    { L"ed-command",                 EDITED_ED_COMMAND,                   
      L"Editline extended command" },
};
